generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Filme {
  id            Int      @id @default(autoincrement())
  titulo        String   @unique
  duracao       Int // Duração em minutos
  classificacao String
  genero        String
  sessoes       Sessao[]
}

model Sala {
  id         Int      @id @default(autoincrement())
  numero     Int      @unique
  capacidade Int
  tipo       String   // Ex: "2D", "3D", "IMAX"
  sessoes    Sessao[]
}

model Sessao {
  id            Int        @id @default(autoincrement())
  data          DateTime   @db.Date // Apenas a data
  horario       String     // Horário como string (ex: "14:30")
  valorIngresso Decimal    @db.Decimal(10, 2)

  filme   Filme @relation(fields: [filmeId], references: [id], onDelete: Cascade)
  filmeId Int

  sala   Sala @relation(fields: [salaId], references: [id], onDelete: Cascade)
  salaId Int

  ingressos Ingresso[]

  @@unique([filmeId, salaId, data, horario]) // Garante que não haja sessões duplicadas
}

model Ingresso {
  id           Int           @id @default(autoincrement())
  quantidade   Int           @default(1)
  tipoIngresso TipoIngresso  @default(INTEIRA)
  valorTotal   Decimal       @db.Decimal(10, 2)

  sessao   Sessao @relation(fields: [sessaoId], references: [id], onDelete: Cascade)
  sessaoId Int
}

enum TipoIngresso {
  INTEIRA
  MEIA
}
