generator client {
  provider = "prisma-client-js"
  output   = "../cinema-ts-api/node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Filme {
  id            Int      @id @default(autoincrement())
  titulo        String   @unique
  duracao       Int // Duração em minutos
  classificacao String
  genero        String
  sessoes       Sessao[]
}

model Sala {
  id         Int      @id @default(autoincrement())
  numero     Int      @unique
  capacidade Int
  descricao  String? // Ex: "Sala 3D com som Dolby Atmos"
  sessoes    Sessao[]
}

model Sessao {
  id            Int        @id @default(autoincrement())
  dataHora      DateTime // Combina data e horário em um único campo
  valorIngresso Decimal    @db.Decimal(10, 2)
  
  filme   Filme @relation(fields: [filmeId], references: [id], onDelete: Cascade)
  filmeId Int
  
  sala   Sala @relation(fields: [salaId], references: [id], onDelete: Cascade)
  salaId Int

  ingressos Ingresso[]

  @@unique([filmeId, salaId, dataHora]) // Garante que não haja sessões duplicadas
}

model Ingresso {
  id       Int    @id @default(autoincrement())
  assento  String // Ex: "A1", "B5", etc.
  
  sessao   Sessao @relation(fields: [sessaoId], references: [id], onDelete: Cascade)
  sessaoId Int

  @@unique([sessaoId, assento]) // Garante que um assento não seja vendido duas vezes para a mesma sessão
}

enum TipoIngresso {
  INTEIRA
  MEIA
}
